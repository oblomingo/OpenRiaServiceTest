<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenRiaServices.DomainServices.EntityFramework</name>
    </assembly>
    <members>
        <member name="M:OpenRiaServices.DomainServices.ExceptionHandlingUtility.IsFatal(System.Exception)">
            <summary>
            Determines if an <see cref="T:System.Exception"/> is fatal and therefore should not be handled.
            </summary>
            <example>
            try
            {
                // Code that may throw
            }
            catch (Exception ex)
            {
                if (ex.IsFatal())
                {
                    throw;
                }
                
                // Handle exception
            }
            </example>
            <param name="exception">The exception to check</param>
            <returns><c>true</c> if the exception is fatal, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.AssociationInfo">
            <summary>
            Information about an Association
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.AssociationInfo.Name">
            <summary>
            The name of the association
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.AssociationInfo.ThisKey">
            <summary>
            The key members on the FK side of the association
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.AssociationInfo.OtherKey">
            <summary>
            The key members on the non-FK side of the association
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.AssociationInfo.FKRole">
            <summary>
            The foreign key role name for this association
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.AssociationInfo.IsRequired">
            <summary>
            Gets or sets a value indicating whether this association can have a
            multiplicity of zero
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.DbResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbResource.DefaultCtorNotFound">
            <summary>
              Looks up a localized string similar to The DbContext type &apos;{0}&apos; does not contain a default constructor. A default constructor is required to use EntityFramework in the Code-First mode with WCF RIA Services..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbResource.InvalidDbDomainServiceDescriptionProviderSpecification">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not a valid DbDomainServiceDescriptionProviderAttribute parameter because it does not derive from DbContext..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbResource.MetadataWorkspaceNotFound">
            <summary>
              Looks up a localized string similar to Failed to get the MetadataWorkspace for the DbContext type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbResource.ObjectStateManagerNotFoundException">
            <summary>
              Looks up a localized string similar to ObjectStateManager not initialized for the DbContext type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.DbContextExtensions">
            <summary>
            DbContext extension methods for DbDomainService authors.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbContextExtensions.AttachAsModified``1(System.Data.Entity.DbSet{``0},``0,``0,System.Data.Entity.DbContext)">
            <summary>
            Extension method used to attach the specified entity as modified,
            with the specified original state.
            </summary>
            <typeparam name="T">The entity Type</typeparam>
            <param name="dbSet">The <see cref="T:System.Data.Entity.DbSet"/> to attach to.</param>
            <param name="current">The current entity.</param>
            <param name="original">The original entity.</param>
            <param name="dbContext">The corresponding <see cref="T:System.Data.Entity.DbContext"/></param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbContextExtensions.AttachAsModified``1(System.Data.Entity.DbSet{``0},``0,System.Data.Entity.DbContext)">
            <summary>
            Extension method used to attach the specified entity as modified. This overload
            can be used in cases where the entity has a Timestamp member.
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <param name="dbSet">The <see cref="T:System.Data.Entity.DbSet"/> to attach to</param>
            <param name="entity">The current entity</param>
            <param name="dbContext">The coresponding <see cref="T:System.Data.Entity.DbContext"/></param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1">
            <summary>
            Base class for DomainServices operating on LINQ To Entities DbContext based data models
            </summary>
            <typeparam name="TContext">The DbContext type</typeparam>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.#ctor">
            <summary>
            Protected constructor for the abstract class.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.Initialize(OpenRiaServices.DomainServices.Server.DomainServiceContext)">
            <summary>
            Initializes the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>. <see cref="M:OpenRiaServices.DomainServices.Server.DomainService.Initialize(OpenRiaServices.DomainServices.Server.DomainServiceContext)"/> must be called 
            prior to invoking any operations on the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> instance.
            </summary>
            <param name="context">The <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceContext"/> for this <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>
            instance. Overrides must call the base method.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.CreateDbContext">
            <summary>
            Returns the DbContext object.
            </summary>
            <returns>The created DbContext object.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.Count``1(System.Linq.IQueryable{``0})">
            <summary>
            Gets the number of rows in an <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <typeparam name="T">The element Type of the query.</typeparam>
            <param name="query">The query for which the count should be returned.</param>
            <returns>The total number of rows.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.PersistChangeSet">
            <summary>
            This method is called to finalize changes after all the operations in the specified changeset
            have been invoked. All changes are committed to the DbContext, and any resulting optimistic
            concurrency errors are processed.
            </summary>
            <returns><c>True</c> if the <see cref="T:OpenRiaServices.DomainServices.Server.ChangeSet"/> was persisted successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.ResolveConflicts(System.Collections.Generic.IEnumerable{System.Data.Entity.Infrastructure.DbEntityEntry})">
            <summary>
            This method is called to finalize changes after all the operations in the specified changeset
            have been invoked. All changes are committed to the DbContext.
            <remarks>If the submit fails due to concurrency conflicts <see cref="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.ResolveConflicts(System.Collections.Generic.IEnumerable{System.Data.Entity.Infrastructure.DbEntityEntry})"/> will be called.
            If <see cref="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.ResolveConflicts(System.Collections.Generic.IEnumerable{System.Data.Entity.Infrastructure.DbEntityEntry})"/> returns true a single resubmit will be attempted.
            </remarks>
            </summary>
            <param name="conflicts">The list of concurrency conflicts that occurred</param>
            <returns>Returns <c>true</c> if the <see cref="T:OpenRiaServices.DomainServices.Server.ChangeSet"/> was persisted successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.Dispose(System.Boolean)">
            <summary>
            See <see cref="T:System.IDisposable"/>.
            </summary>
            <param name="disposing">A <see cref="T:System.Boolean"/> indicating whether or not the instance is currently disposing.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.InvokeSaveChanges(System.Boolean)">
            <summary>
            Called by PersistChangeSet method to save the changes to the database.
            </summary>
            <param name="retryOnConflict">Flag indicating whether to retry after resolving conflicts.</param>
            <returns><c>true</c> if saved successfully and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.SetChangeSetConflicts(System.Collections.Generic.Dictionary{System.Data.Entity.Infrastructure.DbEntityEntry,OpenRiaServices.DomainServices.Server.ChangeSetEntry})">
            <summary>
            Updates each entry in the ChangeSet with its corresponding conflict info.
            </summary>
            <param name="operationConflictMap">Map of conflicts to their corresponding operations entries.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.RefreshContext">
            <summary>
            Gets the <see cref="T:System.Data.Entity.Core.Objects.ObjectContext"/> used for retrieving store values
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.DbContext">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1.DbContext"/>
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.DbDomainServiceDescriptionProviderAttribute">
            <summary>
            Attribute applied to a <see cref="T:OpenRiaServices.DomainServices.EntityFramework.DbDomainService`1"/> that exposes LINQ to Entities mapped
            Types.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainServiceDescriptionProviderAttribute.#ctor">
            <summary>
            Default constructor. Using this constructor, the Type of the LINQ To Entities
            DbContext will be inferred from the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> the
            attribute is applied to.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainServiceDescriptionProviderAttribute.#ctor(System.Type)">
            <summary>
            Constructs an attribute for the specified LINQ To Entities
            DbContext Type.
            </summary>
            <param name="dbContextType">The LINQ To Entities ObjectContext Type.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainServiceDescriptionProviderAttribute.CreateProvider(System.Type,OpenRiaServices.DomainServices.Server.DomainServiceDescriptionProvider)">
            <summary>
            This method creates an instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider"/>.
            </summary>
            <param name="domainServiceType">The <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> Type to create a description provider for.</param>
            <param name="parent">The existing parent description provider.</param>
            <returns>The description provider.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.DbDomainServiceDescriptionProviderAttribute.GetContextType(System.Type)">
            <summary>
            Extracts the context type from the specified <paramref name="domainServiceType"/>.
            </summary>
            <param name="domainServiceType">A LINQ to Entities domain service type.</param>
            <returns>The type of the object context.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.DbDomainServiceDescriptionProviderAttribute.DbContextType">
            <summary>
            The Linq To Entities DbContext Type.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1">
            <summary>
            Base class for DomainServices operating on LINQ To Entities data models
            </summary>
            <typeparam name="TContext">The Type of the LINQ To Entities ObjectContext</typeparam>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.#ctor">
            <summary>
            Protected constructor because this is an abstract class
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.Initialize(OpenRiaServices.DomainServices.Server.DomainServiceContext)">
            <summary>
            Initializes this <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>. <see cref="M:OpenRiaServices.DomainServices.Server.DomainService.Initialize(OpenRiaServices.DomainServices.Server.DomainServiceContext)"/> must be called 
            prior to invoking any operations on the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> instance.
            </summary>
            <param name="context">The <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceContext"/> for this <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>
            instance. Overrides must call the base method.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.CreateObjectContext">
            <summary>
            Creates and returns the <see cref="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ObjectContext"/> instance that will
            be used by this provider.
            </summary>
            <returns>The ObjectContext</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.Dispose(System.Boolean)">
            <summary>
            See <see cref="T:System.IDisposable"/>.
            </summary>
            <param name="disposing">A <see cref="T:System.Boolean"/> indicating whether or not the instance is currently disposing.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.Count``1(System.Linq.IQueryable{``0})">
            <summary>
            Gets the number of rows in an <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <typeparam name="T">The element Type of the query.</typeparam>
            <param name="query">The query for which the count should be returned.</param>
            <returns>The total number of rows.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.PersistChangeSet">
            <summary>
            This method is called to finalize changes after all the operations in the specified changeset
            have been invoked. All changes are committed to the ObjectContext, and any resulting optimistic
            concurrency errors are processed.
            </summary>
            <returns>True if the <see cref="T:OpenRiaServices.DomainServices.Server.ChangeSet"/> was persisted successfully, false otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ResolveConflicts(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})">
            <summary>
            This method is called to finalize changes after all the operations in the specified changeset
            have been invoked. All changes are committed to the ObjectContext.
            <remarks>If the submit fails due to concurrency conflicts <see cref="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ResolveConflicts(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})"/> will be called.
            If <see cref="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ResolveConflicts(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})"/> returns true a single resubmit will be attempted.
            </remarks>
            </summary>
            <param name="conflicts">The list of concurrency conflicts that occurred</param>
            <returns>Returns <c>true</c> if the <see cref="T:OpenRiaServices.DomainServices.Server.ChangeSet"/> was persisted successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.SetChangeSetConflicts(System.Collections.Generic.Dictionary{System.Data.Entity.Core.Objects.ObjectStateEntry,OpenRiaServices.DomainServices.Server.ChangeSetEntry})">
            <summary>
            Updates each entry in the ChangeSet with its corresponding conflict info.
            </summary>
            <param name="operationConflictMap">Map of conflicts to their corresponding operations entries.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ObjectContext">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ObjectContext"/>
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.RefreshContext">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainService`1.ObjectContext"/> used by retrieving store values
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProvider.GetTypeDescriptor(System.Type,System.ComponentModel.ICustomTypeDescriptor)">
            <summary>
            Returns a custom type descriptor for the specified type (either an entity or complex type).
            </summary>
            <param name="objectType">Type of object for which we need the descriptor</param>
            <param name="parent">The parent type descriptor</param>
            <returns>Custom type description for the specified type</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProviderAttribute">
            <summary>
            Attribute applied to a <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> that exposes LINQ to Entities mapped
            Types.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProviderAttribute.#ctor">
            <summary>
            Default constructor. Using this constructor, the Type of the LINQ To Entities
            ObjectContext will be inferred from the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> the
            attribute is applied to.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProviderAttribute.#ctor(System.Type)">
            <summary>
            Constructs an attribute for the specified LINQ To Entities
            ObjectContext Type.
            </summary>
            <param name="objectContextType">The LINQ To Entities ObjectContext Type.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProviderAttribute.CreateProvider(System.Type,OpenRiaServices.DomainServices.Server.DomainServiceDescriptionProvider)">
            <summary>
            This method creates an instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider"/>.
            </summary>
            <param name="domainServiceType">The <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> Type to create a description provider for.</param>
            <param name="parent">The existing parent description provider.</param>
            <returns>The description provider.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProviderAttribute.GetContextType(System.Type)">
            <summary>
            Extracts the context type from the specified <paramref name="domainServiceType"/>.
            </summary>
            <param name="domainServiceType">A LINQ to Entities domain service type.</param>
            <returns>The type of the object context.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesDomainServiceDescriptionProviderAttribute.ObjectContextType">
            <summary>
            The Linq To Entities ObjectContext Type.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext">
            <summary>
            Metadata context for LINQ To Entities domain services
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Server.TypeDescriptionContextBase">
            <summary>
            Base class for LTS and EF type description contexts
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptionContextBase.MakeUniqueName(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Given a suggested name and a collection of existing names, this method
            creates a unique name by appending a numerix suffix as required.
            </summary>
            <param name="suggested">The desired name</param>
            <param name="existing">Collection of existing names</param>
            <returns>The unique name</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptionContextBase.FormatMemberList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Comma delimits the specified member name collection
            </summary>
            <param name="members">A collection of members.</param>
            <returns>A comma delimited list of member names.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext.#ctor(System.Type)">
            <summary>
            Constructor that accepts a LINQ To Entities context type
            </summary>
            <param name="contextType">The ObjectContext Type</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext.GetEdmType(System.Type)">
            <summary>
            Returns the <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType"/> that corresponds to the given CLR type
            </summary>
            <param name="clrType">The CLR type</param>
            <returns>The StructuralType that corresponds to the given CLR type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext.GetAssociationInfo(System.Data.Entity.Core.Metadata.Edm.NavigationProperty)">
            <summary>
            Returns the association information for the specified navigation property.
            </summary>
            <param name="navigationProperty">The navigation property to return association information for</param>
            <returns>The association info</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext.CreateAssociationAttribute(System.Data.Entity.Core.Metadata.Edm.NavigationProperty)">
            <summary>
            Creates an AssociationAttribute for the specified navigation property
            </summary>
            <param name="navigationProperty">The navigation property that corresponds to the association (it identifies the end points)</param>
            <returns>A new AssociationAttribute that describes the given navigation property association</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext.GetAssociationName(System.Data.Entity.Core.Metadata.Edm.NavigationProperty,System.String)">
            <summary>
            Returns a unique association name for the specified navigation property.
            </summary>
            <param name="navigationProperty">The navigation property</param>
            <param name="foreignKeyRoleName">The foreign key role name for the property's association</param>
            <returns>A unique association name for the specified navigation property.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext.MetadataWorkspace">
            <summary>
            Gets the MetadataWorkspace for the context
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor">
            <summary>
            CustomTypeDescriptor for LINQ To Entities
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Server.TypeDescriptorBase">
            <summary>
            CustomTypeDescriptor base type shared by LINQ To SQL and LINQ To Entities
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorBase.#ctor(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>
            Main constructor that accepts the parent custom type descriptor
            </summary>
            <param name="parent">The parent custom type descriptor.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorBase.GetProperties">
            <summary>
            Override of the <see cref="M:System.ComponentModel.CustomTypeDescriptor.GetProperties"/> to obtain the list
            of properties for this type.
            </summary>
            <remarks>
            This method is overridden so that it can merge this class's parent attributes with those
            it infers from the DAL-specific attributes.
            </remarks>
            <returns>A list of properties for this type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorBase.GetMemberAttributes(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Abstract method specific DAL implementations must override to return the
            list of RIA <see cref="T:System.Attribute"/>s implied by their DAL-specific attributes
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> to examine.</param>
            <returns>A list of RIA attributes implied by the DAL specific attributes</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorBase.IsNullableType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the given type is a nullable type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor.#ctor(OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext,System.Data.Entity.Core.Metadata.Edm.StructuralType,System.ComponentModel.ICustomTypeDescriptor)">
            <summary>
            Constructor taking a metadata context, an structural type, and a parent custom type descriptor
            </summary>
            <param name="typeDescriptionContext">The <see cref="T:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptionContext"/> context.</param>
            <param name="edmType">The <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType"/> type (can be an entity or complex type).</param>
            <param name="parent">The parent custom type descriptor.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor.GetMemberAttributes(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns a collection of all the <see cref="T:System.Attribute"/>s we infer from the metadata associated
            with the metadata member corresponding to the given property descriptor
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> to examine</param>
            <returns>A collection of attributes inferred from the metadata in the given descriptor.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor.ShouldExcludeEntityMember(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Determines whether the specified property is an Entity member that
            should be excluded.
            </summary>
            <param name="pd">The property to check.</param>
            <returns>True if the property should be excluded, false otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor.AddAssociationAttributes(System.ComponentModel.PropertyDescriptor,System.Collections.Generic.List{System.Attribute})">
            <summary>
            Add AssociationAttribute if required for the specified property
            </summary>
            <param name="pd">The property</param>
            <param name="attributes">The list of attributes to append to</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor.TypeDescriptionContext">
            <summary>
            Gets the metadata context
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.LinqToEntitiesTypeDescriptor.EdmType">
            <summary>
            Gets the Edm type
            </summary>
        </member>
        <member name="T:System.Data.Mapping.MetadataResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Data.Mapping.MetadataResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Data.Mapping.MetadataResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Data.Mapping.MetadataResource.LinqToEntitiesProvider_UnableToRetrieveMetadata">
            <summary>
              Looks up a localized string similar to Unable to find metadata for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:System.Data.Mapping.MetadataWorkspaceUtilities">
            <summary>
            EF metadata utilities class.
            </summary>
        </member>
        <member name="M:System.Data.Mapping.MetadataWorkspaceUtilities.CreateMetadataWorkspace(System.Type)">
            <summary>
            Creates a metadata workspace for the specified context.
            </summary>
            <param name="contextType">The type of the object context.</param>
            <returns>The metadata workspace.</returns>
        </member>
        <member name="M:System.Data.Mapping.MetadataWorkspaceUtilities.CreateMetadataWorkspaceFromResources(System.Type,System.Type)">
            <summary>
            Creates the MetadataWorkspace for the given context type and base context type.
            </summary>
            <param name="contextType">The type of the context.</param>
            <param name="baseContextType">The base context type (DbContext or ObjectContext).</param>
            <returns>The generated <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace"/></returns>
        </member>
        <member name="M:System.Data.Mapping.MetadataWorkspaceUtilities.GetMetadataWorkspaceInfos(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the specified resource paths as metadata workspace info objects.
            </summary>
            <param name="resourcePaths">The metadata resource paths.</param>
            <returns>The metadata workspace info objects.</returns>
        </member>
        <member name="M:System.Data.Mapping.MetadataWorkspaceUtilities.FindMetadataResources(System.Reflection.Assembly)">
            <summary>
            Find all the EF metadata resources.
            </summary>
            <param name="assembly">The assembly to find the metadata resources in.</param>
            <returns>The metadata paths that were found.</returns>
        </member>
        <member name="T:System.Data.Mapping.MetadataWorkspaceUtilities.MetadataWorkspaceInfo">
            <summary>
            Represents the paths for a single metadata workspace.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.ObjectContextExtensions.ObjectContextExtensions">
            <summary>
            ObjectContext extension methods useful to LinqToEntitiesDomainService authors
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.ObjectContextExtensions.ObjectContextExtensions.AttachAsModified``1(System.Data.Entity.Core.Objects.ObjectSet{``0},``0,``0)">
            <summary>
            Extension method used to attach the specified entity as modified,
            with the specified original state.
            </summary>
            <typeparam name="T">The entity Type</typeparam>
            <param name="objectSet">The ObjectSet to attach to</param>
            <param name="current">The current entity state</param>
            <param name="original">The original entity state</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.ObjectContextExtensions.ObjectContextExtensions.AttachAsModified``1(System.Data.Entity.Core.Objects.ObjectSet{``0},``0)">
            <summary>
            Extension method used to attach the specified entity as modified. This overload
            can be used in cases where the entity has a Timestamp member.
            </summary>
            <typeparam name="T">The entity Type</typeparam>
            <param name="objectSet">The ObjectSet to attach to</param>
            <param name="entity">The current entity state</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.ObjectContextUtilities">
            <summary>
            Internal utility functions for dealing with EF types and metadata
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.ObjectContextUtilities.GetEdmType(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Type)">
            <summary>
            Retrieves the <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType"/> corresponding to the given CLR type (where the
            type is an entity or complex type).
            </summary>
            <remarks>
            If no mapping exists for <paramref name="clrType"/>, but one does exist for one of its base 
            types, we will return the mapping for the base type.
            </remarks>
            <param name="workspace">The <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace"/></param>
            <param name="clrType">The CLR type</param>
            <returns>The <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType"/> corresponding to that CLR type, or <c>null</c> if the Type
            is not mapped.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.ObjectContextUtilities.GetEntityState(System.Data.Entity.Core.Objects.ObjectContext,System.Object)">
            <summary>
            Method used to return the current <see cref="T:System.Data.Entity.EntityState"/> of the specified
            entity.
            </summary>
            <param name="context">The <see cref="T:System.Data.Entity.Core.Objects.ObjectContext"/></param>
            <param name="entity">The entity to return the <see cref="T:System.Data.Entity.EntityState"/> for</param>
            <returns>The current <see cref="T:System.Data.Entity.EntityState"/> of the specified entity</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.ObjectContextUtilities.IsConcurrencyTimestamp(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
            <summary>
            Determines if the specified EdmMember is a concurrency timestamp.
            </summary>
            <remarks>Since EF doesn't expose "timestamp" as a first class
            concept, we use the below criteria to infer this for ourselves.
            </remarks>
            <param name="member">The member to check.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.EntityFramework.ObjectContextUtilities.GetStoreGeneratedPattern(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
            <summary>
            Gets the <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern"/> property value from the edm member.
            </summary>
            <param name="member">The EdmMember from which to get the StoreGeneratedPattern value.</param>
            <returns>The <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern"/> value.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.EntityFramework.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.Resource.DatabaseGeneratedOptionNotDefined">
            <summary>
              Looks up a localized string similar to DatabaseGeneratedOption value &apos;{0}&apos; is not defined..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.Resource.InvalidLinqToEntitiesDomainServiceDescriptionProviderSpecification">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not a valid LinqToEntitiesDomainServiceDescriptionProviderAttribute parameter because it does not derive from ObjectContext..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.Resource.InvalidMetadataProviderSpecification">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot be applied to DomainService Type &apos;{1}&apos; because &apos;{1}&apos; does not derive from &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.EntityFramework.Resource.LinqToEntitiesProvider_UnableToRetrieveAssociationInfo">
            <summary>
              Looks up a localized string similar to Unable to retrieve association information for association &apos;{0}&apos;. Only models that include foreign key information are supported. See Entity Framework documentation for details on creating models that include foreign key information..
            </summary>
        </member>
    </members>
</doc>
